name: Start Application and Cluster

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
      workdir:
        required: false
        type: string
        default: ./terraform/startup
      key_id:
        required: false
        type: string
        default: 1900ba61cb6081c6326afcfa624ad79b57d8fd48
    secrets:
      GC_SERVICE_ACCOUNT:
        required: true
      GC_SERVICE_ACCOUNT_SECRET:
        required: true
      GC_PROJECT_ID:
        required: true
      GC_BACKEND_BUCKET:
        required: true

env:
  GOOGLE_APPLICATION_CREDENTIALS:  ${{ github.workspace }}/${{ secrets.GC_SERVICE_ACCOUNT }}.json
  SERVICE_ACCOUNT_EMAIL: ${{ secrets.GC_SERVICE_ACCOUNT }}@${{ secrets.GC_PROJECT_ID }}.iam.gserviceaccount.com

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.workdir }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Authenticate to Google Cloud
      run: |
        echo "${{ secrets.GC_SERVICE_ACCOUNT_SECRET }}" | base64 --decode > $GOOGLE_APPLICATION_CREDENTIALS
        echo $SERVICE_ACCOUNT_EMAIL
        gcloud auth activate-service-account $SERVICE_ACCOUNT_EMAIL --key-file=$GOOGLE_APPLICATION_CREDENTIALS
        gcloud config set project ${{ secrets.GC_PROJECT_ID }}

    - name: Terraform Init - Migrate state
      run: terraform init -migrate-state 

    - name: Terraform Plan
      run: terraform plan -input=false

    - name: Terraform Destroy kubernetes
      run: terraform destroy -auto-approve -input=false -target=google_container_cluster.primary

    # - name: Terraform destroy service account
    #   run: terraform destroy -auto-approve -input=false -target=google_service_account.sa

    - name: Terraform Init - Migrate state
      run: terraform init -migrate-state

    - name: Delete not used keys
      run: |
        for key in $(gcloud iam service-accounts keys list --iam-account ${{ env.SERVICE_ACCOUNT_EMAIL }} --format="value(KEY_ID)"); do
          if [ "$key" != "${{inputs.key_id}}" ]; then
            gcloud iam service-accounts keys delete $key --iam-account ${{ env.SERVICE_ACCOUNT_EMAIL }} --quiet
          fi
        done
