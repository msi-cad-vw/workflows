name: Install or uninstall one helm service
on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
      cluster: 
        required: false
        type: string
        default: msi-cad-vw-cluster
      name:
        required: true
        type: string
      restart:
        required: false
        type: boolean
        default: true      

    secrets:
      GC_SERVICE_ACCOUNT:
        required: true
      GC_SERVICE_ACCOUNT_SECRET:
        required: true
      GC_PROJECT_ID:
        required: true
      GC_BACKEND_BUCKET:
        required: true

env:
  GOOGLE_APPLICATION_CREDENTIALS:  ${{ github.workspace }}/${{ secrets.GC_SERVICE_ACCOUNT }}.json
  SERVICE_ACCOUNT_EMAIL: ${{ secrets.GC_SERVICE_ACCOUNT }}@${{ secrets.GC_PROJECT_ID }}.iam.gserviceaccount.com
  REGION: europe-west1-c 

jobs:
  build:
    name: Start Services
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ./helm

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      run: |
        echo "${{ secrets.GC_SERVICE_ACCOUNT_SECRET }}" | base64 --decode > $GOOGLE_APPLICATION_CREDENTIALS
        echo $SERVICE_ACCOUNT_EMAIL
        gcloud auth activate-service-account $SERVICE_ACCOUNT_EMAIL --key-file=$GOOGLE_APPLICATION_CREDENTIALS
        gcloud config set project ${{ secrets.GC_PROJECT_ID }}

    # Get the GKE credentials so we can deploy to the cluster
    - name: Get GKE credentials
      uses: google-github-actions/get-gke-credentials@db150f2cc60d1716e61922b832eae71d2a45938f
      with:
        cluster_name: ${{ inputs.cluster }}
        location: ${{ env.REGION }}
        project_id: ${{ secrets.GC_PROJECT_ID }}

    - name: Download Tenants.json from Bucket and print tenants
      run: |
        gcloud storage cp gs://${{ secrets.GC_BACKEND_BUCKET }}/tenants.json tenants.json
        tenants=$(jq -r '.[].name' tenants.json)
        for tenant in $tenants; do
          echo $tenant
        done

    - name: Install service
      if: ${{ inputs.restart == true }}
      continue-on-error: true
      run: |
        helm install parkspace-${{ inputs.name }} ./backend/ --set namespace=${{ inputs.name }}

    - name: Uninstall service
      if: ${{ inputs.restart == false }}
      continue-on-error: true
      run: |
        helm uninstall parkspace-${{ inputs.name }}
